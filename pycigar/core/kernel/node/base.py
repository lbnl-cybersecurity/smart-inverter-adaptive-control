class KernelNode(object):
    """Base node kernel.

    This kernel subclass is responsible for managing nodes.
    Basically, this is a book keeping for PQ injection, the voltage
    and load profile at the nodes.
    """

    def __init__(self, master_kernel):
        """Instantiate the base node kernel.

        Parameters
        ----------
        master_kernel : pycigar.core.kernel.Kernel
            The highest level kernel (used to call methods from other
            sub-kernels)
        """
        self.master_kernel = master_kernel
        self.kernel_api = None

    def pass_api(self, kernel_api):
        """Accquire the kernel api that was generated by the simulation kernel.

        Parameters
        ----------
        kernel_api : any
            an API that is used to interact with the simulator
        """
        self.kernel_api = kernel_api

    def update(self, reset):
        """Apply node kW and kVar to the simulator using Load, PQ injection.

        If reset is True, reset node information to their initial state.

        Parameters
        ----------
        reset : bool
            specifies whether the simulator was reset in the last simulation
            step
        """
        raise NotImplementedError
